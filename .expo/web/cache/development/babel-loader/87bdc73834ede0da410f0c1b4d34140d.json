{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ameyarao/Documents/GitHub/summerHacks/LocationForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    minWidth: 100,\n    marginTop: 20,\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 3\n  }\n});\n\nvar LocationForm = function (_React$Component) {\n  _inherits(LocationForm, _React$Component);\n\n  var _super = _createSuper(LocationForm);\n\n  function LocationForm() {\n    var _this;\n\n    _classCallCheck(this, LocationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      location: '',\n      isFormValid: false\n    };\n\n    _this.handleLocationChange = function (location) {\n      _this.validateForm();\n\n      _this.setState({\n        location: location\n      });\n    };\n\n    _this.handleSubmit = function () {\n      _this.props.onSubmit(_this.state);\n\n      Alert.alert('Location is ' + _this.state.location);\n    };\n\n    _this.validateForm = function () {\n      if (_this.state.location.length > 0) {\n        return _this.setState({\n          isFormValid: true\n        });\n      } else {\n        return _this.setState({\n          isFormValid: false\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(LocationForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.location,\n        placeholder: \"Enter Location\",\n        onChangeText: this.handleLocationChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Submit\",\n        onPress: this.handleSubmit,\n        disabled: !this.state.isFormValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return LocationForm;\n}(React.Component);\n\nexport { LocationForm as default };","map":{"version":3,"sources":["/Users/ameyarao/Documents/GitHub/summerHacks/LocationForm.js"],"names":["React","styles","StyleSheet","create","container","flex","backgroundColor","justifyContent","input","borderWidth","borderColor","minWidth","marginTop","marginHorizontal","paddingHorizontal","paddingVertical","borderRadius","LocationForm","state","location","isFormValid","handleLocationChange","validateForm","setState","handleSubmit","props","onSubmit","Alert","alert","length","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAIA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,cAAc,EAAC;AAHN,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,CADR;AAELC,IAAAA,WAAW,EAAE,OAFR;AAGLC,IAAAA,QAAQ,EAAE,GAHL;AAILC,IAAAA,SAAS,EAAE,EAJN;AAKLC,IAAAA,gBAAgB,EAAE,EALb;AAMLC,IAAAA,iBAAiB,EAAE,EANd;AAOLC,IAAAA,eAAe,EAAE,CAPZ;AAQLC,IAAAA,YAAY,EAAE;AART;AANwB,CAAlB,CAAf;;IAkBqBC,Y;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,WAAW,EAAE;AAFP,K;;UAKRC,oB,GAAuB,UAAAF,QAAQ,EAAI;AACjC,YAAKG,YAAL;;AACA,YAAKC,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACD,K;;UAEDK,Y,GAAe,YAAM;AACnB,YAAKC,KAAL,CAAWC,QAAX,CAAoB,MAAKR,KAAzB;;AACAS,MAAAA,KAAK,CAACC,KAAN,CAAY,iBAAiB,MAAKV,KAAL,CAAWC,QAAxC;AACD,K;;UACDG,Y,GAAe,YAAM;AACnB,UAAG,MAAKJ,KAAL,CAAWC,QAAX,CAAoBU,MAApB,GAA6B,CAAhC,EAAkC;AAChC,eAAO,MAAKN,QAAL,CAAc;AAACH,UAAAA,WAAW,EAAC;AAAb,SAAd,CAAP;AACD,OAFD,MAGI;AACF,eAAO,MAAKG,QAAL,CAAc;AAACH,UAAAA,WAAW,EAAC;AAAb,SAAd,CAAP;AACD;AACF,K;;;;;;;6BACQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnB,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEH,MAAM,CAACO,KADlB;AAEI,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWC,QAFtB;AAGI,QAAA,WAAW,EAAC,gBAHhB;AAII,QAAA,YAAY,EAAE,KAAKE,oBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAI,KAAKG,YAAvC;AAAqD,QAAA,QAAQ,EAAI,CAAC,KAAKN,KAAL,CAAWE,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAWD;;;;EAnCuCpB,KAAK,CAAC8B,S;;SAA3Bb,Y","sourcesContent":["import React from 'react'\nimport {Button, StyleSheet, TextInput, View, Alert} from 'react-native'\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent:'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    minWidth: 100,\n    marginTop: 20,\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 3,\n  },\n})\n\nexport default class LocationForm extends React.Component {\n  state = {\n    location: '',\n    isFormValid: false,\n  }\n\n  handleLocationChange = location => {\n    this.validateForm()\n    this.setState({location})\n  }\n\n  handleSubmit = () => {\n    this.props.onSubmit(this.state)\n    Alert.alert('Location is ' + this.state.location)\n  }\n  validateForm = () => {\n    if(this.state.location.length > 0){\n      return this.setState({isFormValid:true})\n    }\n    else{\n      return this.setState({isFormValid:false})\n    }\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput\n            style={styles.input}\n            value={this.state.location}\n            placeholder='Enter Location'\n            onChangeText={this.handleLocationChange}\n        />\n        <Button title=\"Submit\" onPress = {this.handleSubmit} disabled = {!this.state.isFormValid}/>\n      </View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}